import numpy as np
from scipy.stats import linregress
import matplotlib.pyplot as plt
stress_strain = np.array([[2.93062090e-03, 1.19721047e+02],
 [4.58964511e-03, 1.26343620e+02],
 [3.82066188e-03, 1.33205540e+02],
 [5.51369393e-03, 1.40130757e+02],
 [4.47188662e-03, 1.46974874e+02],
 [4.90307557e-03, 1.53801188e+02],
 [4.74242659e-03, 1.61003336e+02],
 [4.67187302e-03, 1.67960202e+02],
 [4.47239420e-03, 1.75314661e+02],
 [5.56572085e-03, 1.82595931e+02],
 [4.51528468e-03, 1.89938521e+02],
 [5.36167381e-03, 1.97393861e+02],
 [5.15889573e-03, 2.04774034e+02],
 [6.44028065e-03, 2.12249155e+02],
 [6.28546884e-03, 2.19749990e+02],
 [6.39383711e-03, 2.27519843e+02],
 [5.22843414e-03, 2.34870345e+02],
 [5.74362753e-03, 2.42483931e+02],
 [5.20178621e-03, 2.50265142e+02],
 [6.24841553e-03, 2.57690811e+02],
 [6.61311153e-03, 2.65597135e+02],
 [6.43825033e-03, 2.73281931e+02],
 [6.44764055e-03, 2.80982552e+02],
 [5.33502588e-03, 2.88863176e+02],
 [6.76030964e-03, 2.96557862e+02],
 [6.74330572e-03, 3.04482005e+02],
 [5.50760297e-03, 3.12119327e+02],
 [6.06923990e-03, 3.20001930e+02],
 [7.71760493e-03, 3.27657055e+02],
 [6.42708358e-03, 3.35157890e+02],
 [7.65466505e-03, 3.43060273e+02],
 [8.60561560e-03, 3.50847929e+02],
 [5.97026186e-03, 3.58768115e+02],
 [6.15172160e-03, 3.66282797e+02],
 [6.28572263e-03, 3.74066496e+02],
 [6.26237397e-03, 3.81713709e+02],
 [7.16079002e-03, 3.89754557e+02],
 [7.48792512e-03, 3.97429463e+02],
 [7.16586581e-03, 4.04920408e+02],
 [7.48716375e-03, 4.12213546e+02],
 [9.17283590e-03, 4.19862737e+02],
 [9.34820468e-03, 4.27325989e+02],
 [9.36647755e-03, 4.34389672e+02],
 [9.36089417e-03, 4.41835832e+02],
 [8.55511142e-03, 4.49117102e+02],
 [9.30201493e-03, 4.56123420e+02],
 [9.40251570e-03, 4.63098090e+02],
 [9.76010559e-03, 4.70005505e+02],
 [1.00826725e-02, 4.76780389e+02],
 [1.09892098e-02, 4.83901436e+02],
 [1.08123183e-02, 4.90204551e+02],
 [1.19465051e-02, 4.96682725e+02],
 [1.05679187e-02, 5.03135184e+02],
 [1.12714241e-02, 5.09290933e+02],
 [1.08661217e-02, 5.15600971e+02],
 [1.09201790e-02, 5.21609354e+02],
 [1.09420049e-02, 5.27430810e+02],
 [1.16998214e-02, 5.33166219e+02],
 [1.15813015e-02, 5.38403155e+02],
 [1.23622129e-02, 5.43527342e+02],
 [1.30350097e-02, 5.48734607e+02],
 [1.38499289e-02, 5.53648129e+02],
 [1.41100635e-02, 5.57980099e+02],
 [1.14632892e-02, 5.62605812e+02],
 [1.12485830e-02, 5.66925913e+02],
 [1.18099662e-02, 5.70790070e+02],
 [1.22873449e-02, 5.74906430e+02],
 [1.26751357e-02, 5.78602451e+02],
 [1.34288916e-02, 5.81749744e+02],
 [1.40148923e-02, 5.84893883e+02],
 [1.44168954e-02, 5.88357481e+02],
 [1.37532350e-02, 5.90853062e+02],
 [1.50955295e-02, 5.93638924e+02],
 [1.52823188e-02, 5.96325141e+02],
 [1.58584217e-02, 5.99022237e+02],
 [1.68520090e-02, 6.01520538e+02],
 [1.57848227e-02, 6.03479938e+02],
 [1.78681835e-02, 6.05396439e+02],
 [1.86671140e-02, 6.07469208e+02],
 [1.80714692e-02, 6.08991517e+02],
 [1.74956200e-02, 6.11112192e+02],
 [1.81516668e-02, 6.12576642e+02],
 [1.88178651e-02, 6.13919751e+02],
 [1.98058690e-02, 6.15284247e+02],
 [2.02954296e-02, 6.16444199e+02],
 [2.10463937e-02, 6.17596918e+02],
 [2.15846820e-02, 6.18596646e+02],
 [2.22683918e-02, 6.19613683e+02],
 [2.29828102e-02, 6.20306068e+02],
 [2.34076544e-02, 6.21395119e+02],
 [2.43395707e-02, 6.22346013e+02],
 [2.51291110e-02, 6.22893629e+02],
 [2.59387006e-02, 6.23590775e+02],
 [2.59067230e-02, 6.24091844e+02],
 [2.63995829e-02, 6.24663320e+02],
 [2.73533251e-02, 6.25398791e+02],
 [2.95673877e-02, 6.25779878e+02],
 [2.98569620e-02, 6.26148850e+02],
 [3.05231603e-02, 6.26592926e+02],
 [3.12089004e-02, 6.26938470e+02],
 [3.21512221e-02, 6.27234006e+02],
 [3.35414829e-02, 6.27507783e+02],
 [3.32854089e-02, 6.27934737e+02],
 [3.37589808e-02, 6.28058489e+02],
 [3.44051297e-02, 6.28337706e+02],
 [3.50670137e-02, 6.28788273e+02],
 [3.57938678e-02, 6.28756500e+02],
 [3.65958437e-02, 6.29031885e+02],
 [3.75681126e-02, 6.28903125e+02],
 [3.81782233e-02, 6.28934094e+02],
 [3.88461982e-02, 6.29059021e+02],
 [4.03019368e-02, 6.29058527e+02],
 [4.06899814e-02, 6.29000545e+02],
 [4.19619761e-02, 6.29179683e+02],
 [4.24840218e-02, 6.29214052e+02],
 [4.26428943e-02, 6.29153907e+02],
 [4.45635758e-02, 6.29053581e+02],
 [4.45498712e-02, 6.28915426e+02],
 [4.62355433e-02, 6.29101982e+02],
 [4.69400639e-02, 6.28909986e+02],
 [4.75646407e-02, 6.28842299e+02],
 [4.83348929e-02, 6.28827278e+02],
 [4.96259218e-02, 6.28774797e+02],
 [5.05202772e-02, 6.28629719e+02],
 [5.04256136e-02, 6.28302781e+02],
 [5.24186253e-02, 6.28074623e+02],
 [5.35317475e-02, 6.28065165e+02],
 [5.39713115e-02, 6.27959771e+02],
 [5.47968899e-02, 6.27781189e+02],
 [5.46839534e-02, 6.27509699e+02],
 [5.64109933e-02, 6.27079469e+02],
 [5.71485066e-02, 6.27048995e+02],
 [5.84882632e-02, 6.26882837e+02],
 [5.80931124e-02, 6.26640832e+02],
 [5.90024414e-02, 6.26260858e+02],
 [6.01041431e-02, 6.26288736e+02],
 [6.07388715e-02, 6.26419845e+02],
 [6.18014896e-02, 6.26013414e+02],
 [6.23517060e-02, 6.26019101e+02],
 [6.33036717e-02, 6.25727212e+02],
 [6.38437365e-02, 6.24956322e+02],
 [6.51700422e-02, 6.25301618e+02],
 [6.55796590e-02, 6.25039833e+02],
 [6.53517557e-02, 6.24603175e+02],
 [6.62491566e-02, 6.24452594e+02],
 [6.71724440e-02, 6.24134373e+02],
 [6.83238886e-02, 6.23844585e+02],
 [6.84401243e-02, 6.23522717e+02],
 [6.95375116e-02, 6.23340982e+02],
 [6.99999167e-02, 6.22816299e+02],
 [7.14394127e-02, 6.22507102e+02],
 [7.21368272e-02, 6.22228504e+02],
 [7.16525962e-02, 6.21915660e+02],
 [7.38120939e-02, 6.21745113e+02],
 [7.49280079e-02, 6.21318654e+02],
 [7.57200860e-02, 6.20897758e+02],
 [7.69012239e-02, 6.20610135e+02],
 [7.68931026e-02, 6.20437363e+02],
 [7.71841996e-02, 6.20372457e+02],
 [7.78483676e-02, 6.19884925e+02],
 [7.84429972e-02, 6.19755362e+02],
 [7.95901273e-02, 6.19364075e+02],
 [8.04134216e-02, 6.19090422e+02],
 [8.22049241e-02, 6.18478704e+02],
 [8.16937913e-02, 6.18244426e+02],
 [8.38652172e-02, 6.18186568e+02],
 [8.48763160e-02, 6.17800906e+02],
 [8.53293308e-02, 6.17307873e+02],
 [8.58242210e-02, 6.16905274e+02],
 [8.68825247e-02, 6.16823246e+02],
 [8.78687520e-02, 6.16120414e+02],
 [8.76438942e-02, 6.15809610e+02],
 [8.96770046e-02, 6.15353232e+02],
 [8.80865037e-02, 6.15151469e+02],
 [8.99782532e-02, 6.14885048e+02],
 [9.16466676e-02, 6.14487024e+02],
 [9.21042507e-02, 6.14107420e+02],
 [9.29475944e-02, 6.13952512e+02],
 [9.32242253e-02, 6.13566171e+02],
 [9.48335067e-02, 6.13181128e+02],
 [9.56200014e-02, 6.12826621e+02],
 [9.56628919e-02, 6.12378526e+02],
 [9.68800680e-02, 6.11988600e+02],
 [9.76457520e-02, 6.11580005e+02],
 [9.83954472e-02, 6.11272539e+02],
 [9.94814139e-02, 6.10991344e+02],
 [1.00111320e-01, 6.10680849e+02],
 [1.00520683e-01, 6.10233929e+02],
 [1.00905682e-01, 6.09708814e+02],
 [1.03218723e-01, 6.09291132e+02],
 [1.03341050e-01, 6.09014079e+02],
 [1.03655242e-01,6.08606473e+02],
 [1.04744508e-01, 6.08338012e+02],
 [1.05367816e-01, 6.07692544e+02],
 [1.06266232e-01, 6.07464263e+02],
 [1.07655477e-01, 6.07066918e+02],
 [1.08473696e-01, 6.06665556e+02],
 [1.08449839e-01, 6.06103475e+02],
 [1.09541136e-01, 6.05965752e+02],
 [1.10846377e-01, 6.05419063e+02],
 [1.11307513e-01, 6.05121488e+02],
 [1.11228838e-01, 6.04477688e+02],
 [1.12136644e-01, 6.04422982e+02],
 [1.14154274e-01, 6.03846623e+02],
 [1.14526330e-01, 6.03449834e+02],
 [1.15968110e-01, 6.03062257e+02],
 [1.15891465e-01, 6.02176700e+02],
 [1.16928197e-01, 6.02145607e+02],
 [1.18174812e-01, 6.01700975e+02],
 [1.17802503e-01, 6.01134938e+02],
 [1.19809219e-01, 6.00686226e+02],
 [1.20076460e-01, 6.00193130e+02],
 [1.20463743e-01, 5.99853582e+02],
 [1.21507327e-01, 5.99526954e+02],
 [1.22674506e-01, 5.98779800e+02],
 [1.23452626e-01, 5.98553497e+02],
 [1.23872394e-01, 5.98087662e+02],
 [1.25031453e-01, 5.97735566e+02],
 [1.25751962e-01, 5.97174289e+02],
 [1.26092040e-01, 5.96637181e+02],
 [1.27027764e-01, 5.96313829e+02],
 [1.27894202e-01, 5.95753108e+02],
 [1.28628924e-01, 5.95683196e+02],
 [1.29582158e-01, 5.94992726e+02],
 [1.30059283e-01, 5.94395041e+02],
 [1.31216819e-01, 5.94092520e+02],
 [1.31687091e-01, 5.93493598e+02],
 [1.32705550e-01, 5.93105958e+02],
 [1.33213130e-01, 5.92503945e+02],
 [1.34962249e-01, 5.92165819e+02],
 [1.34847536e-01, 5.91398638e+02],
 [1.35929950e-01, 5.91075286e+02],
 [1.37177073e-01, 5.90808988e+02],
 [1.37644554e-01, 5.90266503e+02],
 [1.38574186e-01, 5.89654538e+02],
 [1.38427750e-01, 5.89326982e+02],
 [1.40336249e-01, 5.88595159e+02],
 [1.40897125e-01, 5.88065593e+02],
 [1.41509012e-01, 5.87630603e+02],
 [1.42780499e-01, 5.86878690e+02],
 [1.43268791e-01, 5.86401233e+02],
 [1.44873250e-01, 5.85788774e+02],
 [1.45218658e-01, 5.85211858e+02],
 [1.45878004e-01, 5.84965588e+02],
 [1.46605620e-01, 5.84316473e+02],
 [1.47125635e-01, 5.83632618e+02],
 [1.48129881e-01, 5.83259875e+02],
 [1.49361777e-01, 5.82310093e+02],
 [1.50074673e-01, 5.81808529e+02],
 [1.51180182e-01, 5.81028552e+02],
 [1.51797652e-01, 5.80642025e+02],
 [1.53109746e-01, 5.79822054e+02],
 [1.52943513e-01, 5.79218434e+02],
 [1.54363975e-01, 5.78606160e+02],
 [1.54591878e-01, 5.78037651e+02],
 [1.55954730e-01, 5.77199259e+02],
 [1.57188402e-01, 5.76701342e+02],
 [1.56861267e-01, 5.75788402e+02],
 [1.58150012e-01, 5.75218100e+02],
 [1.58285536e-01, 5.74550069e+02],
 [1.59723255e-01, 5.73628351e+02],
 [1.61611959e-01, 5.73008721e+02],
 [1.61466030e-01, 5.72174594e+02],
 [1.62376882e-01, 5.71287987e+02],
 [1.63452443e-01, 5.70613651e+02],
 [1.64096816e-01, 5.69793185e+02],
 [1.64278022e-01, 5.69035647e+02],
 [1.64355428e-01, 5.68220003e+02],
 [1.65876390e-01, 5.67176881e+02],
 [1.66869724e-01, 5.66364142e+02],
 [1.67407250e-01, 5.65448853e+02],
 [1.69105612e-01, 5.64560514e+02],
 [1.70438009e-01, 5.63565670e+02],
 [1.70744841e-01, 5.62632268e+02],
 [1.71169177e-01, 5.61776816e+02],
 [1.71260542e-01, 5.60729861e+02],
 [1.72999256e-01, 5.59642171e+02],
 [1.73777883e-01, 5.58801986e+02],
 [1.74608030e-01, 5.57743843e+02],
 [1.75739932e-01, 5.56523808e+02],
 [1.76408922e-01, 5.55405581e+02],
 [1.77165724e-01, 5.54477372e+02],
 [1.78007291e-01, 5.53480611e+02],
 [1.78842767e-01, 5.52352494e+02],
 [1.79393237e-01, 5.51133015e+02],
 [1.80039640e-01, 5.50005145e+02],
 [1.81291585e-01, 5.48832212e+02],
 [1.82018439e-01, 5.47716273e+02],
 [1.82807472e-01, 5.46420514e+02],
 [1.83709187e-01, 5.45200046e+02],
 [1.84694907e-01, 5.44126078e+02],
 [1.83870090e-01, 5.42811157e+02],
 [1.85660070e-01, 5.41571156e+02],
 [1.85932132e-01, 5.40002795e+02],
 [1.86992720e-01, 5.38669206e+02],
 [1.86994497e-01, 5.37570450e+02],
 [1.87438883e-01, 5.36210652e+02],
 [1.88465970e-01, 5.34814197e+02],
 [1.89039789e-01, 5.33258199e+02],
 [1.90107229e-01, 5.32090335e+02],
 [1.90765052e-01, 5.30607835e+02],
 [1.91753818e-01, 5.29515756e+02],
 [1.92634722e-01, 5.27858938e+02],
 [1.94287909e-01, 5.26660970e+02],
 [1.95509146e-01, 5.25075796e+02],
 [1.96452229e-01, 5.23888893e+02],
 [1.98042222e-01, 5.22128783e+02],
 [1.98641420e-01, 5.20628294e+02],
 [1.99774084e-01, 5.19435766e+02],
 [2.00813354e-01, 5.17764546e+02],
 [2.01514575e-01, 5.16246440e+02],
 [2.01586651e-01, 5.14666829e+02],
 [2.02432533e-01, 5.13237860e+02],
 [2.04380116e-01, 5.11834420e+02],
 [2.05336396e-01, 5.10613766e+02],
 [2.05840169e-01, 5.08610601e+02],
 [2.06650774e-01, 5.07133849e+02],
 [2.07748415e-01, 5.05618649e+02],
 [1.94380289e-01, 5.04040089e+02]])


def calculate_E(stress_strain):
    stress = stress_strain[:,1]
    strain = stress_strain[:, 0]
    UTS = stress.max()
    mask = (0.4*UTS < stress) & (stress < 0.8 * UTS)
    elastic_stress = stress[mask]
    elastic_strain = strain[mask]
    linear_regression = linregress(elastic_stress,elastic_strain)
    slope = linear_regression[0]
    x = np.linspace(0,0.003)
    y = slope * (strain - 0.002)
    fig, ax = plt.subplots()

    ax.plot(strain, stress, strain, y)
    ax.set_ylim([0, 650])
    ax.set_xlim([0, 0.01])

    plt.show()


    # plt.plot(x, y)
    # plt.show()
    # plt.plot(strain, stress, x, y)
    # plt.title('plot')
    # plt.xlabel('Strain')
    # plt.ylabel('Stress [MPa]')
    # plt.show()



    print(linear_regression)
    print(slope)
    #print(elastic_stress)
    #print(elastic_strain)

calculate_E(stress_strain)


def plot_graph(stress_strain):
 ss = np.array(stress_strain)
 strain = ss[:, 0].tolist()
 stress = ss[:, 1].tolist()
 plt.plot(strain, stress)
 plt.title('plot')
 plt.xlabel('Strain')
 plt.ylabel('Stress [MPa]')
 plt.show()
 #plt.savefig(f'{sample}.jpg', format='jpg', dpi=300)

